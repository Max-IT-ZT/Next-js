"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/searchMovie/page",{

/***/ "(app-pages-browser)/./src/api/tmdb.ts":
/*!*************************!*\
  !*** ./src/api/tmdb.ts ***!
  \*************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getMovieDetails: () => (/* binding */ getMovieDetails),\n/* harmony export */   getMovies: () => (/* binding */ getMovies),\n/* harmony export */   getTrendingMovies: () => (/* binding */ getTrendingMovies)\n/* harmony export */ });\n/* provided dependency */ var process = __webpack_require__(/*! process */ \"(app-pages-browser)/./node_modules/next/dist/build/polyfills/process.js\");\nconst API_URL = \"https://api.themoviedb.org/3\";\nconst options = {\n    headers: {\n        Authorization: \"Bearer \".concat(process.env.TMDB_TOKEN)\n    },\n    next: {\n        revalidate: 3600\n    }\n};\nasync function getMovies(query) {\n    const API_KEY = process.env.NEXT_PUBLIC_TMDB_API_KEY; // ключ з .env\n    const res = await fetch(\"\".concat(API_URL, \"/search/movie?api_key=\").concat(API_KEY, \"&include_adult=false&language=uk-UA&page=1&query=\").concat(encodeURIComponent(query)));\n    if (!res.ok) {\n        throw new Error(\"Failed to fetch movies\");\n    }\n    return res.json();\n}\nasync function getTrendingMovies() {\n    const res = await fetch(\"\".concat(API_URL, \"/trending/movie/week?language=uk-UA\"), options);\n    if (!res.ok) {\n        throw new Error(\"Failed to fetch trending movies\");\n    }\n    return res.json();\n}\nasync function getMovieDetails(movieId) {\n    const res = await fetch(\"\".concat(API_URL, \"/movie/\").concat(movieId, \"?language=uk-UA\"), options);\n    if (!res.ok) {\n        throw new Error(\"Failed to fetch movie details\");\n    }\n    return res.json();\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcGkvdG1kYi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUEsTUFBTUEsVUFBVTtBQVVoQixNQUFNQyxVQUFVO0lBQ2RDLFNBQVM7UUFDUEMsZUFBZSxVQUFpQyxPQUF2QkMsT0FBT0EsQ0FBQ0MsR0FBRyxDQUFDQyxVQUFVO0lBQ2pEO0lBQ0FDLE1BQU07UUFBRUMsWUFBWTtJQUFLO0FBQzNCO0FBQ08sZUFBZUMsVUFBVUMsS0FBYTtJQUMzQyxNQUFNQyxVQUFVUCxPQUFPQSxDQUFDQyxHQUFHLENBQUNPLHdCQUF3QixFQUFFLGNBQWM7SUFFcEUsTUFBTUMsTUFBTSxNQUFNQyxNQUNoQixHQUFtQ0gsT0FBaENYLFNBQVEsMEJBQW1GZSxPQUEzREosU0FBUSxxREFFekMsT0FGNEZJLG1CQUM1Rkw7SUFJSixJQUFJLENBQUNHLElBQUlHLEVBQUUsRUFBRTtRQUNYLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUVBLE9BQU9KLElBQUlLLElBQUk7QUFDakI7QUFFTyxlQUFlQztJQUNwQixNQUFNTixNQUFNLE1BQU1DLE1BQ2hCLEdBQVcsT0FBUmQsU0FBUSx3Q0FDWEM7SUFFRixJQUFJLENBQUNZLElBQUlHLEVBQUUsRUFBRTtRQUNYLE1BQU0sSUFBSUMsTUFBTTtJQUNsQjtJQUNBLE9BQU9KLElBQUlLLElBQUk7QUFDakI7QUFFTyxlQUFlRSxnQkFBZ0JDLE9BQWU7SUFDbkQsTUFBTVIsTUFBTSxNQUFNQyxNQUNoQixHQUFvQk8sT0FBakJyQixTQUFRLFdBQWlCLE9BQVJxQixTQUFRLG9CQUM1QnBCO0lBRUYsSUFBSSxDQUFDWSxJQUFJRyxFQUFFLEVBQUU7UUFDWCxNQUFNLElBQUlDLE1BQU07SUFDbEI7SUFDQSxPQUFPSixJQUFJSyxJQUFJO0FBQ2pCIiwic291cmNlcyI6WyIvVXNlcnMvbWF4L0Rlc2t0b3AvUHJvamVjdC9OZXh0LWpzL3NyYy9hcGkvdG1kYi50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBBUElfVVJMID0gXCJodHRwczovL2FwaS50aGVtb3ZpZWRiLm9yZy8zXCI7XG5leHBvcnQgdHlwZSBNb3ZpZSA9IHtcbiAgaWQ6IG51bWJlcjtcbiAgdGl0bGU6IHN0cmluZztcbiAgb3ZlcnZpZXc6IHN0cmluZztcbiAgcG9zdGVyX3BhdGg6IHN0cmluZyB8IG51bGw7XG4gIHJlbGVhc2VfZGF0ZTogc3RyaW5nO1xuICB2b3RlX2F2ZXJhZ2U6IG51bWJlcjtcbn07XG5cbmNvbnN0IG9wdGlvbnMgPSB7XG4gIGhlYWRlcnM6IHtcbiAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7cHJvY2Vzcy5lbnYuVE1EQl9UT0tFTn1gLFxuICB9LFxuICBuZXh0OiB7IHJldmFsaWRhdGU6IDM2MDAgfSxcbn07XG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0TW92aWVzKHF1ZXJ5OiBzdHJpbmcpOiBQcm9taXNlPHsgcmVzdWx0czogTW92aWVbXSB9PiB7XG4gIGNvbnN0IEFQSV9LRVkgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19UTURCX0FQSV9LRVk7IC8vINC60LvRjtGHINC3IC5lbnZcblxuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICBgJHtBUElfVVJMfS9zZWFyY2gvbW92aWU/YXBpX2tleT0ke0FQSV9LRVl9JmluY2x1ZGVfYWR1bHQ9ZmFsc2UmbGFuZ3VhZ2U9dWstVUEmcGFnZT0xJnF1ZXJ5PSR7ZW5jb2RlVVJJQ29tcG9uZW50KFxuICAgICAgcXVlcnlcbiAgICApfWBcbiAgKTtcblxuICBpZiAoIXJlcy5vaykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCBtb3ZpZXNcIik7XG4gIH1cblxuICByZXR1cm4gcmVzLmpzb24oKTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRyZW5kaW5nTW92aWVzKCk6IFByb21pc2U8eyByZXN1bHRzOiBNb3ZpZVtdIH0+IHtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2goXG4gICAgYCR7QVBJX1VSTH0vdHJlbmRpbmcvbW92aWUvd2Vlaz9sYW5ndWFnZT11ay1VQWAsXG4gICAgb3B0aW9uc1xuICApO1xuICBpZiAoIXJlcy5vaykge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkZhaWxlZCB0byBmZXRjaCB0cmVuZGluZyBtb3ZpZXNcIik7XG4gIH1cbiAgcmV0dXJuIHJlcy5qc29uKCk7XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNb3ZpZURldGFpbHMobW92aWVJZDogc3RyaW5nKTogUHJvbWlzZTxNb3ZpZT4ge1xuICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChcbiAgICBgJHtBUElfVVJMfS9tb3ZpZS8ke21vdmllSWR9P2xhbmd1YWdlPXVrLVVBYCxcbiAgICBvcHRpb25zXG4gICk7XG4gIGlmICghcmVzLm9rKSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiRmFpbGVkIHRvIGZldGNoIG1vdmllIGRldGFpbHNcIik7XG4gIH1cbiAgcmV0dXJuIHJlcy5qc29uKCk7XG59XG4iXSwibmFtZXMiOlsiQVBJX1VSTCIsIm9wdGlvbnMiLCJoZWFkZXJzIiwiQXV0aG9yaXphdGlvbiIsInByb2Nlc3MiLCJlbnYiLCJUTURCX1RPS0VOIiwibmV4dCIsInJldmFsaWRhdGUiLCJnZXRNb3ZpZXMiLCJxdWVyeSIsIkFQSV9LRVkiLCJORVhUX1BVQkxJQ19UTURCX0FQSV9LRVkiLCJyZXMiLCJmZXRjaCIsImVuY29kZVVSSUNvbXBvbmVudCIsIm9rIiwiRXJyb3IiLCJqc29uIiwiZ2V0VHJlbmRpbmdNb3ZpZXMiLCJnZXRNb3ZpZURldGFpbHMiLCJtb3ZpZUlkIl0sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/api/tmdb.ts\n"));

/***/ })

});